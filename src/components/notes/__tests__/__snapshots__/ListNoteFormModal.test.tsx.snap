// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Rendering should render ListNoteFormModal correctly 1`] = `
"<Provider store={{...}}>
  <ListNoteFormModal history={{...}}>
    <Modal isOpen={true} onRequestClose={[Function: onRequestClose]} closeTimeoutMS={200} className=\\"note-modal\\" ariaHideApp={false} portalClassName=\\"ReactModalPortal\\" bodyOpenClassName=\\"ReactModal__Body--open\\" role=\\"dialog\\" shouldFocusAfterRender={true} shouldCloseOnEsc={true} shouldCloseOnOverlayClick={true} shouldReturnFocusAfterClose={true} parentSelector={[Function: parentSelector]}>
      <Portal containerInfo={{...}}>
        <ModalPortal defaultStyles={{...}} isOpen={true} onRequestClose={[Function: onRequestClose]} closeTimeoutMS={200} className=\\"note-modal\\" ariaHideApp={false} portalClassName=\\"ReactModalPortal\\" bodyOpenClassName=\\"ReactModal__Body--open\\" role=\\"dialog\\" shouldFocusAfterRender={true} shouldCloseOnEsc={true} shouldCloseOnOverlayClick={true} shouldReturnFocusAfterClose={true} parentSelector={[Function: parentSelector]} style={{...}}>
          <div className=\\"ReactModal__Overlay ReactModal__Overlay--after-open\\" style={{...}} onClick={[Function]} onMouseDown={[Function]}>
            <div id={[undefined]} style={{...}} className=\\"ReactModal__Content ReactModal__Content--after-open note-modal\\" tabIndex=\\"-1\\" onKeyDown={[Function]} onMouseDown={[Function]} onMouseUp={[Function]} onClick={[Function]} role=\\"dialog\\" aria-label={[undefined]} data-testid={[undefined]}>
              <Connect(NoteFormBase) type={1} history={{...}}>
                <NoteFormBase type={1} history={{...}} notes={{...}} tags={{...}} collaborators={[undefined]} addNote={[Function: addNote]} updateNote={[Function: updateNote]}>
                  <ContentContainer className=\\"note-modal__container\\" style={{...}}>
                    <div onClick={[undefined]} className=\\"content-container note-modal__container\\" style={{...}}>
                      <BaseForm formClassName=\\"note-form\\" initialValues={{...}} validate={[undefined]} onSubmit={[Function]} getFormActions={[Function]}>
                        <ReactFinalForm initialValues={{...}} onSubmit={[Function]} validate={[undefined]} mutators={{...}}>
                          <form onSubmit={[Function: handleSubmit]} className=\\"note-form\\" autoComplete=\\"off\\">
                            <TextInputField name=\\"title\\" type=\\"text\\" placeholder=\\"Title\\" className=\\"note-form__title\\">
                              <Field name=\\"title\\" type=\\"text\\" placeholder=\\"Title\\" className=\\"note-form__title\\" component={[Function: FieldAdapter]} parse={[Function: parse]}>
                                <FieldAdapter input={{...}} meta={{...}} placeholder=\\"Title\\" className=\\"note-form__title\\" render={[undefined]}>
                                  <div className=\\"note-form__title\\">
                                    <input name=\\"title\\" value=\\"\\" checked={[undefined]} onBlur={[Function]} onChange={[Function]} onFocus={[Function]} type=\\"text\\" placeholder=\\"Title\\" render={[undefined]} onInput={[Function: handleOnChange]} onPaste={[undefined]} autoComplete=\\"new-password\\" autoFocus={false} />
                                  </div>
                                </FieldAdapter>
                              </Field>
                            </TextInputField>
                            <FormSpy>
                              <FlexBox justifyContent=\\"space-between\\" alignItems=\\"center\\">
                                <div style={{...}} className={[undefined]}>
                                  <div id=\\"test-checked-items\\">
                                    Checked: 
                                    1/0
                                  </div>
                                  <IconButton onButtonClick={[Function: addItem]} icon=\\"plus-circle\\" text=\\"Add line\\" id=\\"test-add-item-button\\">
                                    <button id=\\"test-add-item-button\\" className=\\"icon-button undefined \\" onClick={[Function: addItem]} disabled={[undefined]} type=\\"button\\">
                                      <FontAwesomeIcon icon=\\"plus-circle\\" border={false} className=\\"\\" mask={{...}} fixedWidth={false} inverse={false} flip={{...}} listItem={false} pull={{...}} pulse={false} rotation={{...}} size={{...}} spin={false} symbol={false} title=\\"\\" transform={{...}} swapOpacity={false}>
                                        <svg aria-hidden=\\"true\\" focusable=\\"false\\" data-prefix=\\"fas\\" data-icon=\\"plus-circle\\" className=\\"svg-inline--fa fa-plus-circle fa-w-16 \\" role=\\"img\\" xmlns=\\"http://www.w3.org/2000/svg\\" viewBox=\\"0 0 512 512\\" style={{...}}>
                                          <path fill=\\"currentColor\\" d=\\"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm144 276c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92h-92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z\\" style={{...}} />
                                        </svg>
                                      </FontAwesomeIcon>
                                      <div className=\\"icon-button__text\\">
                                        Add line
                                      </div>
                                    </button>
                                  </IconButton>
                                </div>
                              </FlexBox>
                              <div className=\\"note-form__list\\">
                                <FieldArray name=\\"content\\">
                                  <ListNoteFromItem autoFocus={true} name=\\"content[0]\\" index={0} onRemove={[Function]} addItem={[Function: addItem]} onChecked={[Function: handleOnChecked]} setPastedValue={[Function]}>
                                    <FlexBox justifyContent=\\"space-between\\" alignItems=\\"flex-start\\" className=\\"list-note-form-item\\">
                                      <div style={{...}} className=\\"list-note-form-item\\">
                                        <CheckboxInputField name=\\"content[0].checked\\" className=\\"list-note-form-item__check\\" id=\\"content[0].checked\\">
                                          <Field name=\\"content[0].checked\\" className=\\"list-note-form-item__check\\" id=\\"content[0].checked\\" type=\\"checkbox\\" component={[Function: FieldAdapter]}>
                                            <FieldAdapter input={{...}} meta={{...}} className=\\"list-note-form-item__check\\" id=\\"content[0].checked\\" render={[undefined]}>
                                              <div className=\\"list-note-form-item__check\\">
                                                <input id=\\"content[0].checked\\" name=\\"content[0].checked\\" value={[undefined]} checked={false} onBlur={[Function]} onChange={[Function]} onFocus={[Function]} type=\\"checkbox\\" />
                                                <label htmlFor=\\"content[0].checked\\" />
                                              </div>
                                            </FieldAdapter>
                                          </Field>
                                        </CheckboxInputField>
                                        <FieldSpy name=\\"content[0].checked\\" onChange={[Function: handleOnChecked]}>
                                          <FormSpy subscription={{...}} onChange={[Function]} />
                                        </FieldSpy>
                                        <TextInputField afterPasteCallback={[Function: addItem]} isTextArea={true} name=\\"content[0].content\\" placeholder=\\"Type something ...\\" className=\\"list-note-form-item__text\\" autoFocus={true} onPaste={[Function: handleOnPaste]}>
                                          <Field afterPasteCallback={[Function: addItem]} isTextArea={true} name=\\"content[0].content\\" placeholder=\\"Type something ...\\" className=\\"list-note-form-item__text\\" autoFocus={true} onPaste={[Function: handleOnPaste]} component={[Function: FieldAdapter]} parse={[Function: parse]}>
                                            <FieldAdapter input={{...}} meta={{...}} afterPasteCallback={[Function: addItem]} isTextArea={true} placeholder=\\"Type something ...\\" className=\\"list-note-form-item__text\\" autoFocus={true} onPaste={[Function: handleOnPaste]} render={[undefined]}>
                                              <div className=\\"list-note-form-item__text\\">
                                                <ForwardRef(TextareaAutosize) name=\\"content[0].content\\" value=\\"\\" checked={[undefined]} onBlur={[Function]} onChange={[Function: handleOnChange]} onFocus={[Function]} placeholder=\\"Type something ...\\" render={[undefined]} onPaste={[Function: handleOnPaste]} spellCheck=\\"false\\" autoComplete=\\"new-password\\" autoFocus={true}>
                                                  <textarea name=\\"content[0].content\\" value=\\"\\" checked={[undefined]} onBlur={[Function]} onFocus={[Function]} placeholder=\\"Type something ...\\" render={[undefined]} onPaste={[Function: handleOnPaste]} spellCheck=\\"false\\" autoComplete=\\"new-password\\" autoFocus={true} onChange={[Function: handleChange]} />
                                                </ForwardRef(TextareaAutosize)>
                                              </div>
                                            </FieldAdapter>
                                          </Field>
                                        </TextInputField>
                                        <IconButton id=\\"test-item-rm-button-0\\" onButtonClick={[Function]} icon=\\"times\\" className=\\"list-note-form-item__remove\\">
                                          <button id=\\"test-item-rm-button-0\\" className=\\"icon-button list-note-form-item__remove \\" onClick={[Function]} disabled={[undefined]} type=\\"button\\">
                                            <FontAwesomeIcon icon=\\"times\\" border={false} className=\\"\\" mask={{...}} fixedWidth={false} inverse={false} flip={{...}} listItem={false} pull={{...}} pulse={false} rotation={{...}} size={{...}} spin={false} symbol={false} title=\\"\\" transform={{...}} swapOpacity={false}>
                                              <svg aria-hidden=\\"true\\" focusable=\\"false\\" data-prefix=\\"fas\\" data-icon=\\"times\\" className=\\"svg-inline--fa fa-times fa-w-11 \\" role=\\"img\\" xmlns=\\"http://www.w3.org/2000/svg\\" viewBox=\\"0 0 352 512\\" style={{...}}>
                                                <path fill=\\"currentColor\\" d=\\"M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z\\" style={{...}} />
                                              </svg>
                                            </FontAwesomeIcon>
                                          </button>
                                        </IconButton>
                                      </div>
                                    </FlexBox>
                                  </ListNoteFromItem>
                                </FieldArray>
                              </div>
                            </FormSpy>
                            <FieldSpy name=\\"color\\" onChange={[Function: onChange]}>
                              <FormSpy subscription={{...}} onChange={[Function]} />
                            </FieldSpy>
                            <div>
                              <FlexBox justifyContent=\\"space-between\\" alignItems=\\"center\\" className=\\"note-form__actions actions\\">
                                <div style={{...}} className=\\"note-form__actions actions\\">
                                  <FlexBox justifyContent=\\"flex-start\\" alignItems=\\"baseline\\" className=\\"actions__options\\">
                                    <div style={{...}} className=\\"actions__options\\">
                                      <IconButton id=\\"icon-palette\\" icon=\\"palette\\" pressed={false} onButtonClick={[Function]}>
                                        <button id=\\"icon-palette\\" className=\\"icon-button undefined \\" onClick={[Function]} disabled={[undefined]} type=\\"button\\">
                                          <FontAwesomeIcon icon=\\"palette\\" border={false} className=\\"\\" mask={{...}} fixedWidth={false} inverse={false} flip={{...}} listItem={false} pull={{...}} pulse={false} rotation={{...}} size={{...}} spin={false} symbol={false} title=\\"\\" transform={{...}} swapOpacity={false}>
                                            <svg aria-hidden=\\"true\\" focusable=\\"false\\" data-prefix=\\"fas\\" data-icon=\\"palette\\" className=\\"svg-inline--fa fa-palette fa-w-16 \\" role=\\"img\\" xmlns=\\"http://www.w3.org/2000/svg\\" viewBox=\\"0 0 512 512\\" style={{...}}>
                                              <path fill=\\"currentColor\\" d=\\"M204.3 5C104.9 24.4 24.8 104.3 5.2 203.4c-37 187 131.7 326.4 258.8 306.7 41.2-6.4 61.4-54.6 42.5-91.7-23.1-45.4 9.9-98.4 60.9-98.4h79.7c35.8 0 64.8-29.6 64.9-65.3C511.5 97.1 368.1-26.9 204.3 5zM96 320c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm32-128c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm128-64c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm128 64c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32z\\" style={{...}} />
                                            </svg>
                                          </FontAwesomeIcon>
                                        </button>
                                      </IconButton>
                                      <IconButton id=\\"icon-tags\\" icon=\\"tags\\" pressed={false} onButtonClick={[Function]}>
                                        <button id=\\"icon-tags\\" className=\\"icon-button undefined \\" onClick={[Function]} disabled={[undefined]} type=\\"button\\">
                                          <FontAwesomeIcon icon=\\"tags\\" border={false} className=\\"\\" mask={{...}} fixedWidth={false} inverse={false} flip={{...}} listItem={false} pull={{...}} pulse={false} rotation={{...}} size={{...}} spin={false} symbol={false} title=\\"\\" transform={{...}} swapOpacity={false}>
                                            <svg aria-hidden=\\"true\\" focusable=\\"false\\" data-prefix=\\"fas\\" data-icon=\\"tags\\" className=\\"svg-inline--fa fa-tags fa-w-20 \\" role=\\"img\\" xmlns=\\"http://www.w3.org/2000/svg\\" viewBox=\\"0 0 640 512\\" style={{...}}>
                                              <path fill=\\"currentColor\\" d=\\"M497.941 225.941L286.059 14.059A48 48 0 0 0 252.118 0H48C21.49 0 0 21.49 0 48v204.118a48 48 0 0 0 14.059 33.941l211.882 211.882c18.744 18.745 49.136 18.746 67.882 0l204.118-204.118c18.745-18.745 18.745-49.137 0-67.882zM112 160c-26.51 0-48-21.49-48-48s21.49-48 48-48 48 21.49 48 48-21.49 48-48 48zm513.941 133.823L421.823 497.941c-18.745 18.745-49.137 18.745-67.882 0l-.36-.36L527.64 323.522c16.999-16.999 26.36-39.6 26.36-63.64s-9.362-46.641-26.36-63.64L331.397 0h48.721a48 48 0 0 1 33.941 14.059l211.882 211.882c18.745 18.745 18.745 49.137 0 67.882z\\" style={{...}} />
                                            </svg>
                                          </FontAwesomeIcon>
                                        </button>
                                      </IconButton>
                                      <IconButton id=\\"icon-share\\" icon=\\"share\\" pressed={false} onButtonClick={[Function]}>
                                        <button id=\\"icon-share\\" className=\\"icon-button undefined \\" onClick={[Function]} disabled={[undefined]} type=\\"button\\">
                                          <FontAwesomeIcon icon=\\"share\\" border={false} className=\\"\\" mask={{...}} fixedWidth={false} inverse={false} flip={{...}} listItem={false} pull={{...}} pulse={false} rotation={{...}} size={{...}} spin={false} symbol={false} title=\\"\\" transform={{...}} swapOpacity={false}>
                                            <svg aria-hidden=\\"true\\" focusable=\\"false\\" data-prefix=\\"fas\\" data-icon=\\"share\\" className=\\"svg-inline--fa fa-share fa-w-16 \\" role=\\"img\\" xmlns=\\"http://www.w3.org/2000/svg\\" viewBox=\\"0 0 512 512\\" style={{...}}>
                                              <path fill=\\"currentColor\\" d=\\"M503.691 189.836L327.687 37.851C312.281 24.546 288 35.347 288 56.015v80.053C127.371 137.907 0 170.1 0 322.326c0 61.441 39.581 122.309 83.333 154.132 13.653 9.931 33.111-2.533 28.077-18.631C66.066 312.814 132.917 274.316 288 272.085V360c0 20.7 24.3 31.453 39.687 18.164l176.004-152c11.071-9.562 11.086-26.753 0-36.328z\\" style={{...}} />
                                            </svg>
                                          </FontAwesomeIcon>
                                        </button>
                                      </IconButton>
                                    </div>
                                  </FlexBox>
                                  <FlexBox justifyContent=\\"flex-end\\" alignItems=\\"center\\" className=\\"actions__submitting-buttons submitting-buttons\\">
                                    <div style={{...}} className=\\"actions__submitting-buttons submitting-buttons\\">
                                      <LinkButton id=\\"test-base-form-close-button\\" text=\\"Close\\" type=\\"button\\" disabled={false} onClick={[Function]}>
                                        <button id=\\"test-base-form-close-button\\" className=\\"link-button undefined\\" type=\\"button\\" disabled={false} onClick={[Function]}>
                                          Close
                                        </button>
                                      </LinkButton>
                                      <ConfirmButton id=\\"test-base-form-submit-button\\" wrapperClassName=\\"submitting-buttons__submit--width\\" className=\\"link-button\\" text=\\"Keep\\" type=\\"submit\\" disabled={true} loading={false}>
                                        <FlexBox className=\\"submitting-buttons__submit--width\\" justifyContent=\\"center\\">
                                          <div style={{...}} className=\\"submitting-buttons__submit--width\\">
                                            <button id=\\"test-base-form-submit-button\\" className=\\"link-button\\" type=\\"submit\\" disabled={true} onClick={[undefined]}>
                                              Keep
                                            </button>
                                          </div>
                                        </FlexBox>
                                      </ConfirmButton>
                                    </div>
                                  </FlexBox>
                                </div>
                              </FlexBox>
                            </div>
                          </form>
                        </ReactFinalForm>
                      </BaseForm>
                    </div>
                  </ContentContainer>
                </NoteFormBase>
              </Connect(NoteFormBase)>
            </div>
          </div>
        </ModalPortal>
      </Portal>
    </Modal>
  </ListNoteFormModal>
</Provider>"
`;
